/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NotfoundImport } from './routes/notfound'
import { Route as LayoutImport } from './routes/_layout'
import { Route as AdminImport } from './routes/_admin'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as AuthVerifyOtpImport } from './routes/auth/verify-otp'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthForgotPasswordImport } from './routes/auth/forgot-password'
import { Route as LayoutTermsOfServiceImport } from './routes/_layout/terms-of-service'
import { Route as LayoutPrivacyPolicyImport } from './routes/_layout/privacy-policy'
import { Route as LayoutFeedbackImport } from './routes/_layout/feedback'
import { Route as LayoutContactImport } from './routes/_layout/contact'
import { Route as LayoutAboutImport } from './routes/_layout/about'
import { Route as LayoutUserImport } from './routes/_layout/_user'
import { Route as LayoutProtectedImport } from './routes/_layout/_protected'
import { Route as LayoutCoursesIndexImport } from './routes/_layout/courses/index'
import { Route as LayoutBlogsIndexImport } from './routes/_layout/blogs/index'
import { Route as AdminAdminIndexImport } from './routes/_admin/admin/index'
import { Route as LayoutCoursesIdImport } from './routes/_layout/courses/$id'
import { Route as LayoutBlogsIdImport } from './routes/_layout/blogs/$id'
import { Route as AdminAdminSettingsImport } from './routes/_admin/admin/settings'
import { Route as AdminAdminSearchImport } from './routes/_admin/admin/search'
import { Route as AdminAdminInboxImport } from './routes/_admin/admin/inbox'
import { Route as AdminAdminDashboardImport } from './routes/_admin/admin/dashboard'
import { Route as AdminAdminCalenderImport } from './routes/_admin/admin/calender'
import { Route as LayoutUserProfileIndexImport } from './routes/_layout/_user/profile/index'
import { Route as AdminAdminTagsIndexImport } from './routes/_admin/admin/tags/index'
import { Route as AdminAdminFeedbackIndexImport } from './routes/_admin/admin/feedback/index'
import { Route as AdminAdminCoursesIndexImport } from './routes/_admin/admin/courses/index'
import { Route as AdminAdminContactUsIndexImport } from './routes/_admin/admin/contact-us/index'
import { Route as AdminAdminCategoriesIndexImport } from './routes/_admin/admin/categories/index'
import { Route as AdminAdminBlogsIndexImport } from './routes/_admin/admin/blogs/index'
import { Route as AdminAdminFeedbackIdImport } from './routes/_admin/admin/feedback/$id'
import { Route as AdminAdminContactUsIdImport } from './routes/_admin/admin/contact-us/$id'

// Create/Update Routes

const NotfoundRoute = NotfoundImport.update({
  id: '/notfound',
  path: '/notfound',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthVerifyOtpRoute = AuthVerifyOtpImport.update({
  id: '/auth/verify-otp',
  path: '/auth/verify-otp',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const LayoutTermsOfServiceRoute = LayoutTermsOfServiceImport.update({
  id: '/terms-of-service',
  path: '/terms-of-service',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPrivacyPolicyRoute = LayoutPrivacyPolicyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFeedbackRoute = LayoutFeedbackImport.update({
  id: '/feedback',
  path: '/feedback',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutContactRoute = LayoutContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAboutRoute = LayoutAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUserRoute = LayoutUserImport.update({
  id: '/_user',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProtectedRoute = LayoutProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCoursesIndexRoute = LayoutCoursesIndexImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBlogsIndexRoute = LayoutBlogsIndexImport.update({
  id: '/blogs/',
  path: '/blogs/',
  getParentRoute: () => LayoutRoute,
} as any)

const AdminAdminIndexRoute = AdminAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AdminRoute,
} as any)

const LayoutCoursesIdRoute = LayoutCoursesIdImport.update({
  id: '/courses/$id',
  path: '/courses/$id',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBlogsIdRoute = LayoutBlogsIdImport.update({
  id: '/blogs/$id',
  path: '/blogs/$id',
  getParentRoute: () => LayoutRoute,
} as any)

const AdminAdminSettingsRoute = AdminAdminSettingsImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminSearchRoute = AdminAdminSearchImport.update({
  id: '/admin/search',
  path: '/admin/search',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminInboxRoute = AdminAdminInboxImport.update({
  id: '/admin/inbox',
  path: '/admin/inbox',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminDashboardRoute = AdminAdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminCalenderRoute = AdminAdminCalenderImport.update({
  id: '/admin/calender',
  path: '/admin/calender',
  getParentRoute: () => AdminRoute,
} as any)

const LayoutUserProfileIndexRoute = LayoutUserProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => LayoutUserRoute,
} as any)

const AdminAdminTagsIndexRoute = AdminAdminTagsIndexImport.update({
  id: '/admin/tags/',
  path: '/admin/tags/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminFeedbackIndexRoute = AdminAdminFeedbackIndexImport.update({
  id: '/admin/feedback/',
  path: '/admin/feedback/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminCoursesIndexRoute = AdminAdminCoursesIndexImport.update({
  id: '/admin/courses/',
  path: '/admin/courses/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminContactUsIndexRoute = AdminAdminContactUsIndexImport.update({
  id: '/admin/contact-us/',
  path: '/admin/contact-us/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminCategoriesIndexRoute = AdminAdminCategoriesIndexImport.update({
  id: '/admin/categories/',
  path: '/admin/categories/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminBlogsIndexRoute = AdminAdminBlogsIndexImport.update({
  id: '/admin/blogs/',
  path: '/admin/blogs/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminFeedbackIdRoute = AdminAdminFeedbackIdImport.update({
  id: '/admin/feedback/$id',
  path: '/admin/feedback/$id',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminContactUsIdRoute = AdminAdminContactUsIdImport.update({
  id: '/admin/contact-us/$id',
  path: '/admin/contact-us/$id',
  getParentRoute: () => AdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/notfound': {
      id: '/notfound'
      path: '/notfound'
      fullPath: '/notfound'
      preLoaderRoute: typeof NotfoundImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_protected': {
      id: '/_layout/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutProtectedImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/_user': {
      id: '/_layout/_user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutUserImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/contact': {
      id: '/_layout/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof LayoutContactImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/feedback': {
      id: '/_layout/feedback'
      path: '/feedback'
      fullPath: '/feedback'
      preLoaderRoute: typeof LayoutFeedbackImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/privacy-policy': {
      id: '/_layout/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof LayoutPrivacyPolicyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/terms-of-service': {
      id: '/_layout/terms-of-service'
      path: '/terms-of-service'
      fullPath: '/terms-of-service'
      preLoaderRoute: typeof LayoutTermsOfServiceImport
      parentRoute: typeof LayoutImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/auth/verify-otp': {
      id: '/auth/verify-otp'
      path: '/auth/verify-otp'
      fullPath: '/auth/verify-otp'
      preLoaderRoute: typeof AuthVerifyOtpImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_admin/admin/calender': {
      id: '/_admin/admin/calender'
      path: '/admin/calender'
      fullPath: '/admin/calender'
      preLoaderRoute: typeof AdminAdminCalenderImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/dashboard': {
      id: '/_admin/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminAdminDashboardImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/inbox': {
      id: '/_admin/admin/inbox'
      path: '/admin/inbox'
      fullPath: '/admin/inbox'
      preLoaderRoute: typeof AdminAdminInboxImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/search': {
      id: '/_admin/admin/search'
      path: '/admin/search'
      fullPath: '/admin/search'
      preLoaderRoute: typeof AdminAdminSearchImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/settings': {
      id: '/_admin/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminAdminSettingsImport
      parentRoute: typeof AdminImport
    }
    '/_layout/blogs/$id': {
      id: '/_layout/blogs/$id'
      path: '/blogs/$id'
      fullPath: '/blogs/$id'
      preLoaderRoute: typeof LayoutBlogsIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/courses/$id': {
      id: '/_layout/courses/$id'
      path: '/courses/$id'
      fullPath: '/courses/$id'
      preLoaderRoute: typeof LayoutCoursesIdImport
      parentRoute: typeof LayoutImport
    }
    '/_admin/admin/': {
      id: '/_admin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/_layout/blogs/': {
      id: '/_layout/blogs/'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof LayoutBlogsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/courses/': {
      id: '/_layout/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof LayoutCoursesIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_admin/admin/contact-us/$id': {
      id: '/_admin/admin/contact-us/$id'
      path: '/admin/contact-us/$id'
      fullPath: '/admin/contact-us/$id'
      preLoaderRoute: typeof AdminAdminContactUsIdImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/feedback/$id': {
      id: '/_admin/admin/feedback/$id'
      path: '/admin/feedback/$id'
      fullPath: '/admin/feedback/$id'
      preLoaderRoute: typeof AdminAdminFeedbackIdImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/blogs/': {
      id: '/_admin/admin/blogs/'
      path: '/admin/blogs'
      fullPath: '/admin/blogs'
      preLoaderRoute: typeof AdminAdminBlogsIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/categories/': {
      id: '/_admin/admin/categories/'
      path: '/admin/categories'
      fullPath: '/admin/categories'
      preLoaderRoute: typeof AdminAdminCategoriesIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/contact-us/': {
      id: '/_admin/admin/contact-us/'
      path: '/admin/contact-us'
      fullPath: '/admin/contact-us'
      preLoaderRoute: typeof AdminAdminContactUsIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/courses/': {
      id: '/_admin/admin/courses/'
      path: '/admin/courses'
      fullPath: '/admin/courses'
      preLoaderRoute: typeof AdminAdminCoursesIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/feedback/': {
      id: '/_admin/admin/feedback/'
      path: '/admin/feedback'
      fullPath: '/admin/feedback'
      preLoaderRoute: typeof AdminAdminFeedbackIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/tags/': {
      id: '/_admin/admin/tags/'
      path: '/admin/tags'
      fullPath: '/admin/tags'
      preLoaderRoute: typeof AdminAdminTagsIndexImport
      parentRoute: typeof AdminImport
    }
    '/_layout/_user/profile/': {
      id: '/_layout/_user/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof LayoutUserProfileIndexImport
      parentRoute: typeof LayoutUserImport
    }
  }
}

// Create and export the route tree

interface AdminRouteChildren {
  AdminAdminCalenderRoute: typeof AdminAdminCalenderRoute
  AdminAdminDashboardRoute: typeof AdminAdminDashboardRoute
  AdminAdminInboxRoute: typeof AdminAdminInboxRoute
  AdminAdminSearchRoute: typeof AdminAdminSearchRoute
  AdminAdminSettingsRoute: typeof AdminAdminSettingsRoute
  AdminAdminIndexRoute: typeof AdminAdminIndexRoute
  AdminAdminContactUsIdRoute: typeof AdminAdminContactUsIdRoute
  AdminAdminFeedbackIdRoute: typeof AdminAdminFeedbackIdRoute
  AdminAdminBlogsIndexRoute: typeof AdminAdminBlogsIndexRoute
  AdminAdminCategoriesIndexRoute: typeof AdminAdminCategoriesIndexRoute
  AdminAdminContactUsIndexRoute: typeof AdminAdminContactUsIndexRoute
  AdminAdminCoursesIndexRoute: typeof AdminAdminCoursesIndexRoute
  AdminAdminFeedbackIndexRoute: typeof AdminAdminFeedbackIndexRoute
  AdminAdminTagsIndexRoute: typeof AdminAdminTagsIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminCalenderRoute: AdminAdminCalenderRoute,
  AdminAdminDashboardRoute: AdminAdminDashboardRoute,
  AdminAdminInboxRoute: AdminAdminInboxRoute,
  AdminAdminSearchRoute: AdminAdminSearchRoute,
  AdminAdminSettingsRoute: AdminAdminSettingsRoute,
  AdminAdminIndexRoute: AdminAdminIndexRoute,
  AdminAdminContactUsIdRoute: AdminAdminContactUsIdRoute,
  AdminAdminFeedbackIdRoute: AdminAdminFeedbackIdRoute,
  AdminAdminBlogsIndexRoute: AdminAdminBlogsIndexRoute,
  AdminAdminCategoriesIndexRoute: AdminAdminCategoriesIndexRoute,
  AdminAdminContactUsIndexRoute: AdminAdminContactUsIndexRoute,
  AdminAdminCoursesIndexRoute: AdminAdminCoursesIndexRoute,
  AdminAdminFeedbackIndexRoute: AdminAdminFeedbackIndexRoute,
  AdminAdminTagsIndexRoute: AdminAdminTagsIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface LayoutUserRouteChildren {
  LayoutUserProfileIndexRoute: typeof LayoutUserProfileIndexRoute
}

const LayoutUserRouteChildren: LayoutUserRouteChildren = {
  LayoutUserProfileIndexRoute: LayoutUserProfileIndexRoute,
}

const LayoutUserRouteWithChildren = LayoutUserRoute._addFileChildren(
  LayoutUserRouteChildren,
)

interface LayoutRouteChildren {
  LayoutProtectedRoute: typeof LayoutProtectedRoute
  LayoutUserRoute: typeof LayoutUserRouteWithChildren
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutContactRoute: typeof LayoutContactRoute
  LayoutFeedbackRoute: typeof LayoutFeedbackRoute
  LayoutPrivacyPolicyRoute: typeof LayoutPrivacyPolicyRoute
  LayoutTermsOfServiceRoute: typeof LayoutTermsOfServiceRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutBlogsIdRoute: typeof LayoutBlogsIdRoute
  LayoutCoursesIdRoute: typeof LayoutCoursesIdRoute
  LayoutBlogsIndexRoute: typeof LayoutBlogsIndexRoute
  LayoutCoursesIndexRoute: typeof LayoutCoursesIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutProtectedRoute: LayoutProtectedRoute,
  LayoutUserRoute: LayoutUserRouteWithChildren,
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutContactRoute: LayoutContactRoute,
  LayoutFeedbackRoute: LayoutFeedbackRoute,
  LayoutPrivacyPolicyRoute: LayoutPrivacyPolicyRoute,
  LayoutTermsOfServiceRoute: LayoutTermsOfServiceRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutBlogsIdRoute: LayoutBlogsIdRoute,
  LayoutCoursesIdRoute: LayoutCoursesIdRoute,
  LayoutBlogsIndexRoute: LayoutBlogsIndexRoute,
  LayoutCoursesIndexRoute: LayoutCoursesIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutUserRouteWithChildren
  '/notfound': typeof NotfoundRoute
  '/about': typeof LayoutAboutRoute
  '/contact': typeof LayoutContactRoute
  '/feedback': typeof LayoutFeedbackRoute
  '/privacy-policy': typeof LayoutPrivacyPolicyRoute
  '/terms-of-service': typeof LayoutTermsOfServiceRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-otp': typeof AuthVerifyOtpRoute
  '/': typeof LayoutIndexRoute
  '/admin/calender': typeof AdminAdminCalenderRoute
  '/admin/dashboard': typeof AdminAdminDashboardRoute
  '/admin/inbox': typeof AdminAdminInboxRoute
  '/admin/search': typeof AdminAdminSearchRoute
  '/admin/settings': typeof AdminAdminSettingsRoute
  '/blogs/$id': typeof LayoutBlogsIdRoute
  '/courses/$id': typeof LayoutCoursesIdRoute
  '/admin': typeof AdminAdminIndexRoute
  '/blogs': typeof LayoutBlogsIndexRoute
  '/courses': typeof LayoutCoursesIndexRoute
  '/admin/contact-us/$id': typeof AdminAdminContactUsIdRoute
  '/admin/feedback/$id': typeof AdminAdminFeedbackIdRoute
  '/admin/blogs': typeof AdminAdminBlogsIndexRoute
  '/admin/categories': typeof AdminAdminCategoriesIndexRoute
  '/admin/contact-us': typeof AdminAdminContactUsIndexRoute
  '/admin/courses': typeof AdminAdminCoursesIndexRoute
  '/admin/feedback': typeof AdminAdminFeedbackIndexRoute
  '/admin/tags': typeof AdminAdminTagsIndexRoute
  '/profile': typeof LayoutUserProfileIndexRoute
}

export interface FileRoutesByTo {
  '': typeof LayoutUserRouteWithChildren
  '/notfound': typeof NotfoundRoute
  '/about': typeof LayoutAboutRoute
  '/contact': typeof LayoutContactRoute
  '/feedback': typeof LayoutFeedbackRoute
  '/privacy-policy': typeof LayoutPrivacyPolicyRoute
  '/terms-of-service': typeof LayoutTermsOfServiceRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-otp': typeof AuthVerifyOtpRoute
  '/': typeof LayoutIndexRoute
  '/admin/calender': typeof AdminAdminCalenderRoute
  '/admin/dashboard': typeof AdminAdminDashboardRoute
  '/admin/inbox': typeof AdminAdminInboxRoute
  '/admin/search': typeof AdminAdminSearchRoute
  '/admin/settings': typeof AdminAdminSettingsRoute
  '/blogs/$id': typeof LayoutBlogsIdRoute
  '/courses/$id': typeof LayoutCoursesIdRoute
  '/admin': typeof AdminAdminIndexRoute
  '/blogs': typeof LayoutBlogsIndexRoute
  '/courses': typeof LayoutCoursesIndexRoute
  '/admin/contact-us/$id': typeof AdminAdminContactUsIdRoute
  '/admin/feedback/$id': typeof AdminAdminFeedbackIdRoute
  '/admin/blogs': typeof AdminAdminBlogsIndexRoute
  '/admin/categories': typeof AdminAdminCategoriesIndexRoute
  '/admin/contact-us': typeof AdminAdminContactUsIndexRoute
  '/admin/courses': typeof AdminAdminCoursesIndexRoute
  '/admin/feedback': typeof AdminAdminFeedbackIndexRoute
  '/admin/tags': typeof AdminAdminTagsIndexRoute
  '/profile': typeof LayoutUserProfileIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_admin': typeof AdminRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/notfound': typeof NotfoundRoute
  '/_layout/_protected': typeof LayoutProtectedRoute
  '/_layout/_user': typeof LayoutUserRouteWithChildren
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/contact': typeof LayoutContactRoute
  '/_layout/feedback': typeof LayoutFeedbackRoute
  '/_layout/privacy-policy': typeof LayoutPrivacyPolicyRoute
  '/_layout/terms-of-service': typeof LayoutTermsOfServiceRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-otp': typeof AuthVerifyOtpRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_admin/admin/calender': typeof AdminAdminCalenderRoute
  '/_admin/admin/dashboard': typeof AdminAdminDashboardRoute
  '/_admin/admin/inbox': typeof AdminAdminInboxRoute
  '/_admin/admin/search': typeof AdminAdminSearchRoute
  '/_admin/admin/settings': typeof AdminAdminSettingsRoute
  '/_layout/blogs/$id': typeof LayoutBlogsIdRoute
  '/_layout/courses/$id': typeof LayoutCoursesIdRoute
  '/_admin/admin/': typeof AdminAdminIndexRoute
  '/_layout/blogs/': typeof LayoutBlogsIndexRoute
  '/_layout/courses/': typeof LayoutCoursesIndexRoute
  '/_admin/admin/contact-us/$id': typeof AdminAdminContactUsIdRoute
  '/_admin/admin/feedback/$id': typeof AdminAdminFeedbackIdRoute
  '/_admin/admin/blogs/': typeof AdminAdminBlogsIndexRoute
  '/_admin/admin/categories/': typeof AdminAdminCategoriesIndexRoute
  '/_admin/admin/contact-us/': typeof AdminAdminContactUsIndexRoute
  '/_admin/admin/courses/': typeof AdminAdminCoursesIndexRoute
  '/_admin/admin/feedback/': typeof AdminAdminFeedbackIndexRoute
  '/_admin/admin/tags/': typeof AdminAdminTagsIndexRoute
  '/_layout/_user/profile/': typeof LayoutUserProfileIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/notfound'
    | '/about'
    | '/contact'
    | '/feedback'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/verify-otp'
    | '/'
    | '/admin/calender'
    | '/admin/dashboard'
    | '/admin/inbox'
    | '/admin/search'
    | '/admin/settings'
    | '/blogs/$id'
    | '/courses/$id'
    | '/admin'
    | '/blogs'
    | '/courses'
    | '/admin/contact-us/$id'
    | '/admin/feedback/$id'
    | '/admin/blogs'
    | '/admin/categories'
    | '/admin/contact-us'
    | '/admin/courses'
    | '/admin/feedback'
    | '/admin/tags'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/notfound'
    | '/about'
    | '/contact'
    | '/feedback'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/verify-otp'
    | '/'
    | '/admin/calender'
    | '/admin/dashboard'
    | '/admin/inbox'
    | '/admin/search'
    | '/admin/settings'
    | '/blogs/$id'
    | '/courses/$id'
    | '/admin'
    | '/blogs'
    | '/courses'
    | '/admin/contact-us/$id'
    | '/admin/feedback/$id'
    | '/admin/blogs'
    | '/admin/categories'
    | '/admin/contact-us'
    | '/admin/courses'
    | '/admin/feedback'
    | '/admin/tags'
    | '/profile'
  id:
    | '__root__'
    | '/_admin'
    | '/_layout'
    | '/notfound'
    | '/_layout/_protected'
    | '/_layout/_user'
    | '/_layout/about'
    | '/_layout/contact'
    | '/_layout/feedback'
    | '/_layout/privacy-policy'
    | '/_layout/terms-of-service'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/verify-otp'
    | '/_layout/'
    | '/_admin/admin/calender'
    | '/_admin/admin/dashboard'
    | '/_admin/admin/inbox'
    | '/_admin/admin/search'
    | '/_admin/admin/settings'
    | '/_layout/blogs/$id'
    | '/_layout/courses/$id'
    | '/_admin/admin/'
    | '/_layout/blogs/'
    | '/_layout/courses/'
    | '/_admin/admin/contact-us/$id'
    | '/_admin/admin/feedback/$id'
    | '/_admin/admin/blogs/'
    | '/_admin/admin/categories/'
    | '/_admin/admin/contact-us/'
    | '/_admin/admin/courses/'
    | '/_admin/admin/feedback/'
    | '/_admin/admin/tags/'
    | '/_layout/_user/profile/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminRoute: typeof AdminRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
  NotfoundRoute: typeof NotfoundRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthVerifyOtpRoute: typeof AuthVerifyOtpRoute
}

const rootRouteChildren: RootRouteChildren = {
  AdminRoute: AdminRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
  NotfoundRoute: NotfoundRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthVerifyOtpRoute: AuthVerifyOtpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_admin",
        "/_layout",
        "/notfound",
        "/auth/forgot-password",
        "/auth/login",
        "/auth/signup",
        "/auth/verify-otp"
      ]
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/admin/calender",
        "/_admin/admin/dashboard",
        "/_admin/admin/inbox",
        "/_admin/admin/search",
        "/_admin/admin/settings",
        "/_admin/admin/",
        "/_admin/admin/contact-us/$id",
        "/_admin/admin/feedback/$id",
        "/_admin/admin/blogs/",
        "/_admin/admin/categories/",
        "/_admin/admin/contact-us/",
        "/_admin/admin/courses/",
        "/_admin/admin/feedback/",
        "/_admin/admin/tags/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_protected",
        "/_layout/_user",
        "/_layout/about",
        "/_layout/contact",
        "/_layout/feedback",
        "/_layout/privacy-policy",
        "/_layout/terms-of-service",
        "/_layout/",
        "/_layout/blogs/$id",
        "/_layout/courses/$id",
        "/_layout/blogs/",
        "/_layout/courses/"
      ]
    },
    "/notfound": {
      "filePath": "notfound.tsx"
    },
    "/_layout/_protected": {
      "filePath": "_layout/_protected.tsx",
      "parent": "/_layout"
    },
    "/_layout/_user": {
      "filePath": "_layout/_user.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_user/profile/"
      ]
    },
    "/_layout/about": {
      "filePath": "_layout/about.tsx",
      "parent": "/_layout"
    },
    "/_layout/contact": {
      "filePath": "_layout/contact.tsx",
      "parent": "/_layout"
    },
    "/_layout/feedback": {
      "filePath": "_layout/feedback.tsx",
      "parent": "/_layout"
    },
    "/_layout/privacy-policy": {
      "filePath": "_layout/privacy-policy.tsx",
      "parent": "/_layout"
    },
    "/_layout/terms-of-service": {
      "filePath": "_layout/terms-of-service.tsx",
      "parent": "/_layout"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/auth/verify-otp": {
      "filePath": "auth/verify-otp.tsx"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_admin/admin/calender": {
      "filePath": "_admin/admin/calender.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/dashboard": {
      "filePath": "_admin/admin/dashboard.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/inbox": {
      "filePath": "_admin/admin/inbox.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/search": {
      "filePath": "_admin/admin/search.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/settings": {
      "filePath": "_admin/admin/settings.tsx",
      "parent": "/_admin"
    },
    "/_layout/blogs/$id": {
      "filePath": "_layout/blogs/$id.tsx",
      "parent": "/_layout"
    },
    "/_layout/courses/$id": {
      "filePath": "_layout/courses/$id.tsx",
      "parent": "/_layout"
    },
    "/_admin/admin/": {
      "filePath": "_admin/admin/index.tsx",
      "parent": "/_admin"
    },
    "/_layout/blogs/": {
      "filePath": "_layout/blogs/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/courses/": {
      "filePath": "_layout/courses/index.tsx",
      "parent": "/_layout"
    },
    "/_admin/admin/contact-us/$id": {
      "filePath": "_admin/admin/contact-us/$id.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/feedback/$id": {
      "filePath": "_admin/admin/feedback/$id.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/blogs/": {
      "filePath": "_admin/admin/blogs/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/categories/": {
      "filePath": "_admin/admin/categories/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/contact-us/": {
      "filePath": "_admin/admin/contact-us/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/courses/": {
      "filePath": "_admin/admin/courses/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/feedback/": {
      "filePath": "_admin/admin/feedback/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/tags/": {
      "filePath": "_admin/admin/tags/index.tsx",
      "parent": "/_admin"
    },
    "/_layout/_user/profile/": {
      "filePath": "_layout/_user/profile/index.tsx",
      "parent": "/_layout/_user"
    }
  }
}
ROUTE_MANIFEST_END */
