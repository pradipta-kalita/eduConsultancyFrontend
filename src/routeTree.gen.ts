/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NotfoundImport } from './routes/notfound'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as AuthVerifyOtpImport } from './routes/auth/verify-otp'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthForgotPasswordImport } from './routes/auth/forgot-password'
import { Route as LayoutTermsOfServiceImport } from './routes/_layout/terms-of-service'
import { Route as LayoutPrivacyPolicyImport } from './routes/_layout/privacy-policy'
import { Route as LayoutFeedbackImport } from './routes/_layout/feedback'
import { Route as LayoutContactImport } from './routes/_layout/contact'
import { Route as LayoutAboutImport } from './routes/_layout/about'
import { Route as LayoutProtectedImport } from './routes/_layout/_protected'
import { Route as LayoutCoursesIndexImport } from './routes/_layout/courses/index'
import { Route as LayoutBlogsIndexImport } from './routes/_layout/blogs/index'
import { Route as LayoutCoursesIdImport } from './routes/_layout/courses/$id'
import { Route as LayoutBlogsIdImport } from './routes/_layout/blogs/$id'
import { Route as LayoutProtectedProfileIndexImport } from './routes/_layout/_protected/profile/index'
import { Route as LayoutProtectedAdminIndexImport } from './routes/_layout/_protected/admin/index'

// Create/Update Routes

const NotfoundRoute = NotfoundImport.update({
  id: '/notfound',
  path: '/notfound',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthVerifyOtpRoute = AuthVerifyOtpImport.update({
  id: '/auth/verify-otp',
  path: '/auth/verify-otp',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const LayoutTermsOfServiceRoute = LayoutTermsOfServiceImport.update({
  id: '/terms-of-service',
  path: '/terms-of-service',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPrivacyPolicyRoute = LayoutPrivacyPolicyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFeedbackRoute = LayoutFeedbackImport.update({
  id: '/feedback',
  path: '/feedback',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutContactRoute = LayoutContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAboutRoute = LayoutAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProtectedRoute = LayoutProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCoursesIndexRoute = LayoutCoursesIndexImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBlogsIndexRoute = LayoutBlogsIndexImport.update({
  id: '/blogs/',
  path: '/blogs/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCoursesIdRoute = LayoutCoursesIdImport.update({
  id: '/courses/$id',
  path: '/courses/$id',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBlogsIdRoute = LayoutBlogsIdImport.update({
  id: '/blogs/$id',
  path: '/blogs/$id',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProtectedProfileIndexRoute =
  LayoutProtectedProfileIndexImport.update({
    id: '/profile/',
    path: '/profile/',
    getParentRoute: () => LayoutProtectedRoute,
  } as any)

const LayoutProtectedAdminIndexRoute = LayoutProtectedAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => LayoutProtectedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/notfound': {
      id: '/notfound'
      path: '/notfound'
      fullPath: '/notfound'
      preLoaderRoute: typeof NotfoundImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_protected': {
      id: '/_layout/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutProtectedImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/contact': {
      id: '/_layout/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof LayoutContactImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/feedback': {
      id: '/_layout/feedback'
      path: '/feedback'
      fullPath: '/feedback'
      preLoaderRoute: typeof LayoutFeedbackImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/privacy-policy': {
      id: '/_layout/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof LayoutPrivacyPolicyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/terms-of-service': {
      id: '/_layout/terms-of-service'
      path: '/terms-of-service'
      fullPath: '/terms-of-service'
      preLoaderRoute: typeof LayoutTermsOfServiceImport
      parentRoute: typeof LayoutImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/auth/verify-otp': {
      id: '/auth/verify-otp'
      path: '/auth/verify-otp'
      fullPath: '/auth/verify-otp'
      preLoaderRoute: typeof AuthVerifyOtpImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/blogs/$id': {
      id: '/_layout/blogs/$id'
      path: '/blogs/$id'
      fullPath: '/blogs/$id'
      preLoaderRoute: typeof LayoutBlogsIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/courses/$id': {
      id: '/_layout/courses/$id'
      path: '/courses/$id'
      fullPath: '/courses/$id'
      preLoaderRoute: typeof LayoutCoursesIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/blogs/': {
      id: '/_layout/blogs/'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof LayoutBlogsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/courses/': {
      id: '/_layout/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof LayoutCoursesIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/_protected/admin/': {
      id: '/_layout/_protected/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof LayoutProtectedAdminIndexImport
      parentRoute: typeof LayoutProtectedImport
    }
    '/_layout/_protected/profile/': {
      id: '/_layout/_protected/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof LayoutProtectedProfileIndexImport
      parentRoute: typeof LayoutProtectedImport
    }
  }
}

// Create and export the route tree

interface LayoutProtectedRouteChildren {
  LayoutProtectedAdminIndexRoute: typeof LayoutProtectedAdminIndexRoute
  LayoutProtectedProfileIndexRoute: typeof LayoutProtectedProfileIndexRoute
}

const LayoutProtectedRouteChildren: LayoutProtectedRouteChildren = {
  LayoutProtectedAdminIndexRoute: LayoutProtectedAdminIndexRoute,
  LayoutProtectedProfileIndexRoute: LayoutProtectedProfileIndexRoute,
}

const LayoutProtectedRouteWithChildren = LayoutProtectedRoute._addFileChildren(
  LayoutProtectedRouteChildren,
)

interface LayoutRouteChildren {
  LayoutProtectedRoute: typeof LayoutProtectedRouteWithChildren
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutContactRoute: typeof LayoutContactRoute
  LayoutFeedbackRoute: typeof LayoutFeedbackRoute
  LayoutPrivacyPolicyRoute: typeof LayoutPrivacyPolicyRoute
  LayoutTermsOfServiceRoute: typeof LayoutTermsOfServiceRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutBlogsIdRoute: typeof LayoutBlogsIdRoute
  LayoutCoursesIdRoute: typeof LayoutCoursesIdRoute
  LayoutBlogsIndexRoute: typeof LayoutBlogsIndexRoute
  LayoutCoursesIndexRoute: typeof LayoutCoursesIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutProtectedRoute: LayoutProtectedRouteWithChildren,
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutContactRoute: LayoutContactRoute,
  LayoutFeedbackRoute: LayoutFeedbackRoute,
  LayoutPrivacyPolicyRoute: LayoutPrivacyPolicyRoute,
  LayoutTermsOfServiceRoute: LayoutTermsOfServiceRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutBlogsIdRoute: LayoutBlogsIdRoute,
  LayoutCoursesIdRoute: LayoutCoursesIdRoute,
  LayoutBlogsIndexRoute: LayoutBlogsIndexRoute,
  LayoutCoursesIndexRoute: LayoutCoursesIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutProtectedRouteWithChildren
  '/notfound': typeof NotfoundRoute
  '/about': typeof LayoutAboutRoute
  '/contact': typeof LayoutContactRoute
  '/feedback': typeof LayoutFeedbackRoute
  '/privacy-policy': typeof LayoutPrivacyPolicyRoute
  '/terms-of-service': typeof LayoutTermsOfServiceRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-otp': typeof AuthVerifyOtpRoute
  '/': typeof LayoutIndexRoute
  '/blogs/$id': typeof LayoutBlogsIdRoute
  '/courses/$id': typeof LayoutCoursesIdRoute
  '/blogs': typeof LayoutBlogsIndexRoute
  '/courses': typeof LayoutCoursesIndexRoute
  '/admin': typeof LayoutProtectedAdminIndexRoute
  '/profile': typeof LayoutProtectedProfileIndexRoute
}

export interface FileRoutesByTo {
  '/notfound': typeof NotfoundRoute
  '': typeof LayoutProtectedRouteWithChildren
  '/about': typeof LayoutAboutRoute
  '/contact': typeof LayoutContactRoute
  '/feedback': typeof LayoutFeedbackRoute
  '/privacy-policy': typeof LayoutPrivacyPolicyRoute
  '/terms-of-service': typeof LayoutTermsOfServiceRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-otp': typeof AuthVerifyOtpRoute
  '/': typeof LayoutIndexRoute
  '/blogs/$id': typeof LayoutBlogsIdRoute
  '/courses/$id': typeof LayoutCoursesIdRoute
  '/blogs': typeof LayoutBlogsIndexRoute
  '/courses': typeof LayoutCoursesIndexRoute
  '/admin': typeof LayoutProtectedAdminIndexRoute
  '/profile': typeof LayoutProtectedProfileIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/notfound': typeof NotfoundRoute
  '/_layout/_protected': typeof LayoutProtectedRouteWithChildren
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/contact': typeof LayoutContactRoute
  '/_layout/feedback': typeof LayoutFeedbackRoute
  '/_layout/privacy-policy': typeof LayoutPrivacyPolicyRoute
  '/_layout/terms-of-service': typeof LayoutTermsOfServiceRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-otp': typeof AuthVerifyOtpRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/blogs/$id': typeof LayoutBlogsIdRoute
  '/_layout/courses/$id': typeof LayoutCoursesIdRoute
  '/_layout/blogs/': typeof LayoutBlogsIndexRoute
  '/_layout/courses/': typeof LayoutCoursesIndexRoute
  '/_layout/_protected/admin/': typeof LayoutProtectedAdminIndexRoute
  '/_layout/_protected/profile/': typeof LayoutProtectedProfileIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/notfound'
    | '/about'
    | '/contact'
    | '/feedback'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/verify-otp'
    | '/'
    | '/blogs/$id'
    | '/courses/$id'
    | '/blogs'
    | '/courses'
    | '/admin'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/notfound'
    | ''
    | '/about'
    | '/contact'
    | '/feedback'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/verify-otp'
    | '/'
    | '/blogs/$id'
    | '/courses/$id'
    | '/blogs'
    | '/courses'
    | '/admin'
    | '/profile'
  id:
    | '__root__'
    | '/_layout'
    | '/notfound'
    | '/_layout/_protected'
    | '/_layout/about'
    | '/_layout/contact'
    | '/_layout/feedback'
    | '/_layout/privacy-policy'
    | '/_layout/terms-of-service'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/verify-otp'
    | '/_layout/'
    | '/_layout/blogs/$id'
    | '/_layout/courses/$id'
    | '/_layout/blogs/'
    | '/_layout/courses/'
    | '/_layout/_protected/admin/'
    | '/_layout/_protected/profile/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  NotfoundRoute: typeof NotfoundRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthVerifyOtpRoute: typeof AuthVerifyOtpRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  NotfoundRoute: NotfoundRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthVerifyOtpRoute: AuthVerifyOtpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/notfound",
        "/auth/forgot-password",
        "/auth/login",
        "/auth/signup",
        "/auth/verify-otp"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_protected",
        "/_layout/about",
        "/_layout/contact",
        "/_layout/feedback",
        "/_layout/privacy-policy",
        "/_layout/terms-of-service",
        "/_layout/",
        "/_layout/blogs/$id",
        "/_layout/courses/$id",
        "/_layout/blogs/",
        "/_layout/courses/"
      ]
    },
    "/notfound": {
      "filePath": "notfound.tsx"
    },
    "/_layout/_protected": {
      "filePath": "_layout/_protected.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_protected/admin/",
        "/_layout/_protected/profile/"
      ]
    },
    "/_layout/about": {
      "filePath": "_layout/about.tsx",
      "parent": "/_layout"
    },
    "/_layout/contact": {
      "filePath": "_layout/contact.tsx",
      "parent": "/_layout"
    },
    "/_layout/feedback": {
      "filePath": "_layout/feedback.tsx",
      "parent": "/_layout"
    },
    "/_layout/privacy-policy": {
      "filePath": "_layout/privacy-policy.tsx",
      "parent": "/_layout"
    },
    "/_layout/terms-of-service": {
      "filePath": "_layout/terms-of-service.tsx",
      "parent": "/_layout"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/auth/verify-otp": {
      "filePath": "auth/verify-otp.tsx"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/blogs/$id": {
      "filePath": "_layout/blogs/$id.tsx",
      "parent": "/_layout"
    },
    "/_layout/courses/$id": {
      "filePath": "_layout/courses/$id.tsx",
      "parent": "/_layout"
    },
    "/_layout/blogs/": {
      "filePath": "_layout/blogs/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/courses/": {
      "filePath": "_layout/courses/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/_protected/admin/": {
      "filePath": "_layout/_protected/admin/index.tsx",
      "parent": "/_layout/_protected"
    },
    "/_layout/_protected/profile/": {
      "filePath": "_layout/_protected/profile/index.tsx",
      "parent": "/_layout/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
